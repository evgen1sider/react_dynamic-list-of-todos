{"version":3,"sources":["components/TodoList/TodoList.tsx","api/api.ts","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["TodoList","state","value","show","onClear","setState","handleChange","event","currentTarget","handleSelect","console","log","filterTodos","todo","isAll","showTodo","title","includes","isCompleted","completed","this","props","todos","onUserSelection","viewTodos","filter","className","type","placeholder","onChange","onClick","name","id","map","classNames","checked","readOnly","userId","React","Component","BASE_URL","loadTodos","a","limit","fetch","response","json","loadUser","CurrentUser","user","reloadUser","prevProps","onUserClear","email","phone","App","selectedUserId","handleUserClear","handleUserSelected","data","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7d8adcd8.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport './TodoList.scss';\n\ntype Props = {\n  onUserSelection: (userId: number) => void;\n  todos: Todo[];\n};\n\ntype State = {\n  value: string;\n  show: string;\n};\n\nexport class TodoList extends React.Component<Props, State> {\n  state: State = {\n    value: '',\n    show: 'all',\n  };\n\n  onClear = () => {\n    this.setState({ value: '' });\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget;\n\n    this.setState(() => ({\n      value,\n    }));\n  };\n\n  handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.currentTarget;\n\n    // eslint-disable-next-line no-console\n    console.log(value);\n\n    if (value === this.state.show) {\n      return;\n    }\n\n    this.setState({ show: value });\n  };\n\n  filterTodos = (todo: Todo) => {\n    const { show, value } = this.state;\n    const isAll = show === 'all';\n    const showTodo = todo.title.includes(value);\n    const isCompleted = show === 'completed';\n    const isActive = show === 'active';\n\n    if (isActive) {\n      return showTodo && todo.completed === false;\n    }\n\n    if (isCompleted) {\n      return showTodo && todo.completed === true;\n    }\n\n    return showTodo && isAll;\n  };\n\n  render() {\n    const { value } = this.state;\n    const { todos, onUserSelection } = this.props;\n\n    const viewTodos = todos.filter(this.filterTodos);\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <div className=\"TodoList__buttons\">\n          <label>\n            <input\n              type=\"text\"\n              placeholder=\"filter by: \"\n              value={value}\n              onChange={this.handleChange}\n              className=\"TodoList__input\"\n            />\n\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={this.onClear}\n            >\n              X\n            </button>\n          </label>\n\n          <label>\n            <select\n              name=\"showGoods\"\n              id=\"showGoods\"\n              onChange={this.handleSelect}\n              className=\"TodoList__input\"\n            >\n              <option value=\"all\">show all</option>\n              <option value=\"active\">show all active</option>\n              <option value=\"completed\">show all completed</option>\n            </select>\n          </label>\n        </div>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {viewTodos.map((todo) => (\n              <li\n                key={todo.id}\n                className={classNames(\n                  'TodoList__item',\n                  {\n                    'TodoList__item--unchecked': !todo.completed,\n                    'TodoList__item--checked': todo.completed,\n                  },\n                )}\n              >\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={todo.completed}\n                    readOnly\n                  />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className=\"\n                  TodoList__user-button\n                  TodoList__user-button--selected\n                  button\n                \"\n                  type=\"button\"\n                  onClick={() => {\n                    onUserSelection(todo.userId);\n                  }}\n                >\n                  User&nbsp;#\n                  {todo.userId}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","const BASE_URL = 'https://mate.academy/students-api';\n\nexport const loadTodos = async (limit = 20) => {\n  const response = await fetch(`${BASE_URL}/todos?limit=${limit}`);\n\n  return response.json();\n};\n\nexport const loadUser = async (userId: number) => {\n  const response = await fetch(`${BASE_URL}/users/${userId}`);\n\n  return response.json();\n};\n","import React from 'react';\nimport { loadUser } from '../../api/api';\nimport './CurrentUser.scss';\n\ninterface Props {\n  userId: number;\n  onUserClear: () => void;\n}\n\ntype State = {\n  user: User | null;\n};\n\nexport class CurrentUser extends React.Component<Props, State> {\n  state: State = {\n    user: null,\n  };\n\n  componentDidMount() {\n    this.reloadUser(this.props.userId);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.userId !== this.props.userId) {\n      this.reloadUser(this.props.userId);\n    }\n  }\n\n  async reloadUser(userId: number) {\n    const user = await loadUser(userId);\n\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n    const { onUserClear } = this.props;\n\n    if (!user) {\n      return (\n        <div>User not found</div>\n      );\n    }\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:\n            {` ${user.name}`}\n          </span>\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={onUserClear}\n          >\n            Clear\n          </button>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{user.name}</h3>\n        <p className=\"CurrentUser__email\">{user.email}</p>\n        <p className=\"CurrentUser__phone\">{user.phone}</p>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { loadTodos } from './api/api';\n\ninterface State {\n  selectedUserId: number;\n  todos: Todo[];\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedUserId: 0,\n    todos: [],\n  };\n\n  async componentDidMount() {\n    const data = await loadTodos(20);\n\n    this.setState({ todos: data });\n  }\n\n  handleUserClear = () => {\n    this.setState({ selectedUserId: 0 });\n  };\n\n  handleUserSelected = (userId: number) => {\n    this.setState({ selectedUserId: userId });\n  };\n\n  render() {\n    const { selectedUserId, todos } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            onUserSelection={this.handleUserSelected}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                onUserClear={this.handleUserClear}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}